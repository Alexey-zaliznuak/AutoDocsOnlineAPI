# Generated by Django 3.2 on 2023-08-19 19:50

import core.utils.make_document_directory_path
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import documents.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(max_length=500)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['-title'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=150, validators=[django.core.validators.MinLengthValidator(7)])),
                ('description', models.TextField(blank=True, max_length=500)),
                ('file', models.FileField(upload_to=core.utils.make_document_directory_path.make_documents_directory_path)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['creation_date'],
            },
        ),
        migrations.CreateModel(
            name='DocumentDocumentsPackage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_packages', to='documents.document')),
            ],
            options={
                'verbose_name': 'DocumentDocumentsPackage',
                'verbose_name_plural': 'DocumentDocumentsPackages',
            },
        ),
        migrations.CreateModel(
            name='DocumentsPackage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, unique=True, validators=[django.core.validators.MinLengthValidator(3)])),
                ('description', models.TextField(blank=True, max_length=500, verbose_name='description')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_packages', to=settings.AUTH_USER_MODEL)),
                ('documents', models.ManyToManyField(through='documents.DocumentDocumentsPackage', to='documents.Document')),
            ],
            options={
                'verbose_name': 'Documents package',
                'verbose_name_plural': 'Documents packages',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('documents_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='records', to='documents.documentspackage')),
            ],
            options={
                'verbose_name': 'Record',
                'verbose_name_plural': 'Records',
                'ordering': ['creation_date'],
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='title')),
                ('name_in_document', models.CharField(help_text="name in document, must have prefix '{{'and postfix '}}'", max_length=70, unique=True, validators=[documents.validators.NameInDocumentRegexValidator(), django.core.validators.MinLengthValidator(7)], verbose_name='template name in document')),
                ('description', models.TextField(blank=True, max_length=500, verbose_name='description')),
                ('is_official', models.BooleanField(blank=True, default=False, verbose_name='official tag')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='templates', to='documents.category')),
            ],
            options={
                'verbose_name': 'Template',
                'verbose_name_plural': 'Templates',
                'ordering': ['-title'],
            },
        ),
        migrations.CreateModel(
            name='TemplateValue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=300)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='documents.template')),
            ],
            options={
                'verbose_name': 'TemplateValue',
                'verbose_name_plural': 'TemplateValues',
            },
        ),
        migrations.CreateModel(
            name='UserDefaultTemplateValue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('template_value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='default_users_values', to='documents.templatevalue')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='default_templates_values', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'UserDefaultTemplateValue',
                'verbose_name_plural': 'UserDefaultTemplateValues',
            },
        ),
        migrations.CreateModel(
            name='RecordTemplateValue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documents.record')),
                ('template_value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='records', to='documents.templatevalue')),
            ],
            options={
                'verbose_name': 'RecordTemplateValue',
                'verbose_name_plural': 'RecordTemplateValue',
            },
        ),
        migrations.AddField(
            model_name='record',
            name='templates_values',
            field=models.ManyToManyField(through='documents.RecordTemplateValue', to='documents.TemplateValue'),
        ),
        migrations.AddField(
            model_name='record',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='records', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DocumentTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documents.document')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='documents.template')),
            ],
            options={
                'verbose_name': 'DocumentTemplate',
                'verbose_name_plural': 'DocumentTemplates',
            },
        ),
        migrations.AddField(
            model_name='documentdocumentspackage',
            name='documents_package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documents.documentspackage'),
        ),
        migrations.AddField(
            model_name='document',
            name='templates',
            field=models.ManyToManyField(through='documents.DocumentTemplate', to='documents.Template'),
        ),
        migrations.AddConstraint(
            model_name='templatevalue',
            constraint=models.UniqueConstraint(fields=('template', 'value'), name='template_value_unique'),
        ),
        migrations.AddConstraint(
            model_name='documenttemplate',
            constraint=models.UniqueConstraint(fields=('document', 'template'), name='document_template_unique'),
        ),
        migrations.AddConstraint(
            model_name='documentdocumentspackage',
            constraint=models.UniqueConstraint(fields=('document', 'documents_package'), name='document_documents_package_unique'),
        ),
    ]
